class Solution {
    public long minimumTime(int[] time, int totalTrips) {
        int n = time.length;
        Arrays.sort(time);
        long left = 0;
        long right = (long)time[n - 1] * totalTrips;
        while (left < right) {
            long mid = (left + right) / 2;
            long trips = 0;
            for (int i = n - 1; i >= 0; i--) {
                trips += mid / time[i];
            }
            if (trips >= totalTrips) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        long trips = 0;
        for (int i = n - 1; i >= 0; i--) {
            trips += left / time[i];
        }
        if (trips < totalTrips) {
            return -1;
        }
        return left;
    }
}
